// Code generated by MockGen. DO NOT EDIT.
// Source: store/store.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	oauth2 "golang.org/x/oauth2"
)

// Store is a mock of Store interface.
type Store struct {
	ctrl     *gomock.Controller
	recorder *StoreMockRecorder
}

// StoreMockRecorder is the mock recorder for Store.
type StoreMockRecorder struct {
	mock *Store
}

// NewStore creates a new mock instance.
func NewStore(ctrl *gomock.Controller) *Store {
	mock := &Store{ctrl: ctrl}
	mock.recorder = &StoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Store) EXPECT() *StoreMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *Store) GetToken() (*oauth2.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(*oauth2.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken.
func (mr *StoreMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*Store)(nil).GetToken))
}
